

<h4>Escolher cliente; ver dados; modificar dados</h4> &nbsp; 
<h7>Digitar na lista pendente (digitar as primeiras letras do cliente)</h7>

<br />
<form>
    
    @* renderiza a drop com ou sem "Escolher" (quando é a 1.º vez, o evento onchange tem que ser forçado a funcionar ) *@
    @if (ViewBag.IDCLIENTESELECIONADO==-1)
    {
       
        @Html.DropDownList("Id", (SelectList)ViewBag.LISTADECLIENTES, 
        "Escolher cliente:",
        @htmlAttributes: new {@onchange="this.form.submit();"} )
    }
    else
        {
            @Html.DropDownList("Id", (SelectList)ViewBag.LISTADECLIENTES,
            @htmlAttributes: new {@onchange="this.form.submit();"} )       
        }
    
 </form>

@if (ViewBag.IDCLIENTESELECIONADO >0 -1)
{
    <a asp-action="Criar" asp-route-Id=@ViewBag.IDCLIENTESELECIONADO  >Adicionar novo item</a>
    <a asp-controller="GCliSenhasTipos" asp-action="Index"> <span style="color:red"><strong>Gerir tipos</strong></span> </a>
}


@* percorrer a coleção de itens e renderizar *@
@* nota: cada linha tem a estrutura do model Item *@
<br />
<table class="table">
    <tr>
    <td>Tipo</td>
    <td>Item 1</td>
    <td>Item 1</td>
    <td>Texto complementar</td>
    </tr>
    @foreach (var linha in ViewBag.LISTADEITENS)
    {
        <tr>
            <td>@linha.TipoVirtual.Designacao</td>
            <td>@linha.Item1</td>
            <td>@linha.Item2</td>
            <td>@linha.Texto</td>
            <td><a asp-action="Editar" asp-route-IdItem=@linha.Id> Editar </a></td>
            <td><a asp-action="Eliminar" asp-route-IdItem=@linha.Id> Eliminar </a></td>
        </tr>
    }
</table>






@* GARAGEM: *@
@* a linha do botão deixa de fazer falta: *@
@* <input type="submit" value="Atualizar página" /> *@

