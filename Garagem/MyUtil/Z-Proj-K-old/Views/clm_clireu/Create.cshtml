@model KRONOS.Models.clm_clireu

@{
    ViewBag.Title = "C";
}

<h2>NOVO REGISTO</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.textodescricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.textodescricao, new { style = "width: 280px; height: 300px;" })
               @* @Html.EditorFor(model => model.textodescricao, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.textodescricao, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dataY, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataY, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dataY, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.textopresentes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.textopresentes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.textopresentes, "", new { @class = "text-danger" })
            </div>
        </div>
        <table>
            <tr>
                <td width="60%" align="center">
                    (Importante, reservada, histórico:)
                </td>
                <td >
                    <div class="form-group">
                        @Html.LabelFor(model => model.Importante, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Importante)
                                @Html.ValidationMessageFor(model => model.Importante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Reservado, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Reservado)
                                @Html.ValidationMessageFor(model => model.Reservado, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.historico, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.historico)
                                @Html.ValidationMessageFor(model => model.historico, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        </table>
       

       
    
        <div class="form-group">
            @Html.LabelFor(model => model.Autor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Autor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Autor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.cliID, "cliID", htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.Label("", "Cliente nº.", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*uma drop, oculta, funciona; a visível apenas para mostrar:*@
                @Html.DropDownList("cliID", null, htmlAttributes: new { @class = "form-control", @disabled = true })
                @Html.DropDownList("cliID", null, htmlAttributes: new { @class = "form-control", style = "display:none" })

                @Html.ValidationMessageFor(model => model.cliID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>
